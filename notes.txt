observations:

so far awi has only been performed by treating the image as a flattened 1D array and by testing on a single image (i.e. batch_size=1)

awi is more expensive as it involves inverse computations

awi is sensitive to function T, and from preliminary observations seems to behave better when T is close to a Delta function

awi convergence seems to be slower than mse, but perhaps an adequate choice of T is able to improve it

awi also recovers more noise (but also sharper) images

it also seems that using purely awi the recovered pixels are shifted a little (about 1 or 2 pixels) to the left. This does not happen if MSE is used for the first few iterations then subsequently changed to awi

implementation on mnist lead to adequate image recovery, but for CIFAR this implementation of awi in 1D is significantly poorer compared to mse

next steps:

find mathematical implementation for awi in 2D space, this might improve convergence overall

adjust code and inverse computations such that it can accommodate for batch implementations



2D:
better convergence than 1D

if T is too delta-like, v can converge to an inverse delta function (image has contrast flipped)

if T is too wide, problem does not converge


2D and 1D working. Convergence is questionable, highly sensitive to the shape of T

In 2D, some cases converge with inverse contrast (filter is recovered as an inverse delta function)

Converge is optimal when a few MSE optimisation steps are performed before AWI (10 steps are enough to greatly improve convergence in both 1D and 2D AWI)

When converge is optimal, the recovery of the image is improved compared to MSE, giving an even lower MSE score. 

2D AWI is able to recover finer details, particularly at edges of the features


Next steps:
Yao's thesis on non-negative awi -- minus delta likely not a bug, but a natural way of the optimisation because the functional is sign independent

Scalability with batches

Scalability with channels (3D convolutions?)

